{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LeadService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/leads`;\n  }\n  // Create a new lead\n  createLead(lead) {\n    return this.http.post(this.apiUrl, lead);\n  }\n  // Get all leads\n  getAllLeads() {\n    return this.http.get(this.apiUrl);\n  }\n  // Get a specific lead by ID\n  getLeadById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  // Get qualified leads based on minimum score\n  getQualifiedLeads(minScore) {\n    return this.http.get(`${this.apiUrl}/qualified/${minScore}`);\n  }\n  // Export leads as CSV\n  exportLeadsToCSV() {\n    return this.http.get(`${this.apiUrl}/export/csv`, {\n      responseType: 'blob'\n    });\n  }\n  static {\n    this.ɵfac = function LeadService_Factory(t) {\n      return new (t || LeadService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LeadService,\n      factory: LeadService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","LeadService","constructor","http","apiUrl","createLead","lead","post","getAllLeads","get","getLeadById","id","getQualifiedLeads","minScore","exportLeadsToCSV","responseType","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ccame\\CascadeProjects\\lead-generator\\frontend\\src\\app\\services\\lead.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { Lead } from '../models/lead.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeadService {\n  private apiUrl = `${environment.apiUrl}/leads`;\n\n  constructor(private http: HttpClient) { }\n\n  // Create a new lead\n  createLead(lead: Lead): Observable<any> {\n    return this.http.post<any>(this.apiUrl, lead);\n  }\n\n  // Get all leads\n  getAllLeads(): Observable<any> {\n    return this.http.get<any>(this.apiUrl);\n  }\n\n  // Get a specific lead by ID\n  getLeadById(id: string): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/${id}`);\n  }\n\n  // Get qualified leads based on minimum score\n  getQualifiedLeads(minScore: number): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/qualified/${minScore}`);\n  }\n\n  // Export leads as CSV\n  exportLeadsToCSV(): Observable<Blob> {\n    return this.http.get(`${this.apiUrl}/export/csv`, {\n      responseType: 'blob'\n    });\n  }\n}\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,gCAAgC;;;AAM5D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,QAAQ;EAEN;EAExC;EACAC,UAAUA,CAACC,IAAU;IACnB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAM,IAAI,CAACH,MAAM,EAAEE,IAAI,CAAC;EAC/C;EAEA;EACAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAM,IAAI,CAACL,MAAM,CAAC;EACxC;EAEA;EACAM,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAM,GAAG,IAAI,CAACL,MAAM,IAAIO,EAAE,EAAE,CAAC;EACnD;EAEA;EACAC,iBAAiBA,CAACC,QAAgB;IAChC,OAAO,IAAI,CAACV,IAAI,CAACM,GAAG,CAAM,GAAG,IAAI,CAACL,MAAM,cAAcS,QAAQ,EAAE,CAAC;EACnE;EAEA;EACAC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACX,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACL,MAAM,aAAa,EAAE;MAChDW,YAAY,EAAE;KACf,CAAC;EACJ;;;uBA9BWd,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXlB,WAAW;MAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}