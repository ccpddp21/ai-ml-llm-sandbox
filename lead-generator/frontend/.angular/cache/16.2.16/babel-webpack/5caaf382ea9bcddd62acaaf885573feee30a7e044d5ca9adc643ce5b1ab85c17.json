{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/lead.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction DashboardComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"div\", 7);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Loading dashboard data...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DashboardComponent_div_7_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 37);\n  }\n  if (rf & 2) {\n    const value_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"background-color\", ctx_r2.qualificationData.datasets[0].backgroundColor[i_r7])(\"width\", value_r6 > 0 ? value_r6 / ctx_r2.leadCount * 100 : 0, \"%\");\n  }\n}\nfunction DashboardComponent_div_7_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵelement(1, \"span\", 39);\n    i0.ɵɵelementStart(2, \"span\", 40);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const label_r8 = ctx.$implicit;\n    const i_r9 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"background-color\", ctx_r3.qualificationData.datasets[0].backgroundColor[i_r9]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", label_r8, \": \", ctx_r3.qualificationData.datasets[0].data[i_r9], \"\");\n  }\n}\nfunction DashboardComponent_div_7_div_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 41);\n  }\n  if (rf & 2) {\n    const value_r10 = ctx.$implicit;\n    const i_r11 = ctx.index;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"background-color\", ctx_r4.industryData.datasets[0].backgroundColor[i_r11])(\"height\", value_r10 > 0 && ctx_r4.industryData.datasets[0].data.length > 0 ? value_r10 / ctx_r4.Math.max.apply(null, ctx_r4.industryData.datasets[0].data) * 80 : 0, \"%\");\n  }\n}\nfunction DashboardComponent_div_7_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵelement(1, \"span\", 39);\n    i0.ɵɵelementStart(2, \"span\", 40);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const label_r12 = ctx.$implicit;\n    const i_r13 = ctx.index;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"background-color\", ctx_r5.industryData.datasets[0].backgroundColor[i_r13]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", label_r12, \": \", ctx_r5.industryData.datasets[0].data[i_r13], \"\");\n  }\n}\nfunction DashboardComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9)(2, \"div\", 10)(3, \"div\", 11)(4, \"span\", 12);\n    i0.ɵɵtext(5, \"people\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 13)(7, \"h3\");\n    i0.ɵɵtext(8, \"Total Leads\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\", 14);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"div\", 10)(12, \"div\", 15)(13, \"span\", 12);\n    i0.ɵɵtext(14, \"verified\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 13)(16, \"h3\");\n    i0.ɵɵtext(17, \"Qualified Leads\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"p\", 14);\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(20, \"div\", 10)(21, \"div\", 16)(22, \"span\", 12);\n    i0.ɵɵtext(23, \"analytics\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(24, \"div\", 13)(25, \"h3\");\n    i0.ɵɵtext(26, \"Average Score\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"p\", 14);\n    i0.ɵɵtext(28);\n    i0.ɵɵelementStart(29, \"span\", 17);\n    i0.ɵɵtext(30, \"/100\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(31, \"div\", 18)(32, \"div\", 19)(33, \"div\", 20)(34, \"div\", 21)(35, \"h3\", 22);\n    i0.ɵɵtext(36, \"Lead Qualification Distribution\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"div\", 23)(38, \"div\", 24);\n    i0.ɵɵtemplate(39, DashboardComponent_div_7_div_39_Template, 1, 4, \"div\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"div\", 26);\n    i0.ɵɵtemplate(41, DashboardComponent_div_7_div_41_Template, 4, 4, \"div\", 27);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(42, \"div\", 20)(43, \"div\", 21)(44, \"h3\", 22);\n    i0.ɵɵtext(45, \"Leads by Industry\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"div\", 23)(47, \"div\", 28);\n    i0.ɵɵtemplate(48, DashboardComponent_div_7_div_48_Template, 1, 4, \"div\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(49, \"div\", 26);\n    i0.ɵɵtemplate(50, DashboardComponent_div_7_div_50_Template, 4, 4, \"div\", 27);\n    i0.ɵɵelementEnd()()()()()();\n    i0.ɵɵelementStart(51, \"div\", 30)(52, \"div\", 31)(53, \"h3\", 32);\n    i0.ɵɵtext(54, \"Quick Actions\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(55, \"div\", 33)(56, \"a\", 34)(57, \"span\", 12);\n    i0.ɵɵtext(58, \"add\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(59, \" Add New Lead \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(60, \"a\", 35)(61, \"span\", 12);\n    i0.ɵɵtext(62, \"list\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(63, \" View All Leads \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(64, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_7_Template_button_click_64_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.loadDashboardData());\n    });\n    i0.ɵɵelementStart(65, \"span\", 12);\n    i0.ɵɵtext(66, \"refresh\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(67, \" Refresh Data \");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate(ctx_r1.leadCount);\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate(ctx_r1.qualifiedLeadCount);\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate(ctx_r1.averageScore);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.qualificationData.datasets[0].data);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.qualificationData.labels);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.industryData.datasets[0].data);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.industryData.labels);\n  }\n}\nexport class DashboardComponent {\n  constructor(leadService) {\n    this.leadService = leadService;\n    this.leadCount = 0;\n    this.qualifiedLeadCount = 0;\n    this.averageScore = 0;\n    this.isLoading = true;\n    // Make Math available to the template\n    this.Math = Math;\n    // Placeholder data for charts\n    this.qualificationData = {\n      labels: ['High (80-100)', 'Medium (60-79)', 'Low (0-59)'],\n      datasets: [{\n        data: [0, 0, 0],\n        backgroundColor: ['#34D399', '#4A6BFF', '#F59E0B']\n      }]\n    };\n    this.industryData = {\n      labels: [],\n      datasets: [{\n        data: [],\n        backgroundColor: []\n      }]\n    };\n  }\n  ngOnInit() {\n    this.loadDashboardData();\n  }\n  loadDashboardData() {\n    this.isLoading = true;\n    this.leadService.getAllLeads().subscribe({\n      next: response => {\n        if (response.success && response.data) {\n          const leads = response.data;\n          this.leadCount = leads.length;\n          // Calculate qualified leads (score >= 70)\n          const qualifiedLeads = leads.filter(lead => {\n            const scoreStr = lead.qualificationScore !== undefined ? String(lead.qualificationScore) : '0';\n            const score = parseInt(scoreStr, 10);\n            return score >= 70;\n          });\n          this.qualifiedLeadCount = qualifiedLeads.length;\n          // Calculate average score\n          if (leads.length > 0) {\n            const totalScore = leads.reduce((sum, lead) => {\n              const scoreStr = lead.qualificationScore !== undefined ? String(lead.qualificationScore) : '0';\n              const score = parseInt(scoreStr, 10);\n              return sum + score;\n            }, 0);\n            this.averageScore = Math.round(totalScore / leads.length);\n          }\n          // Process qualification score distribution\n          const highScoreLeads = leads.filter(lead => {\n            const scoreStr = lead.qualificationScore !== undefined ? String(lead.qualificationScore) : '0';\n            const score = parseInt(scoreStr, 10);\n            return score >= 80;\n          }).length;\n          const mediumScoreLeads = leads.filter(lead => {\n            const scoreStr = lead.qualificationScore !== undefined ? String(lead.qualificationScore) : '0';\n            const score = parseInt(scoreStr, 10);\n            return score >= 60 && score < 80;\n          }).length;\n          const lowScoreLeads = leads.filter(lead => {\n            const scoreStr = lead.qualificationScore !== undefined ? String(lead.qualificationScore) : '0';\n            const score = parseInt(scoreStr, 10);\n            return score < 60;\n          }).length;\n          this.qualificationData.datasets[0].data = [highScoreLeads, mediumScoreLeads, lowScoreLeads];\n          // Process industry distribution\n          const industries = {};\n          leads.forEach(lead => {\n            const industry = lead.industry || 'Unknown';\n            industries[industry] = (industries[industry] || 0) + 1;\n          });\n          const industryLabels = Object.keys(industries);\n          const industryValues = Object.values(industries);\n          const industryColors = this.generateColors(industryLabels.length);\n          this.industryData.labels = industryLabels;\n          this.industryData.datasets[0].data = industryValues;\n          this.industryData.datasets[0].backgroundColor = industryColors;\n        }\n        this.isLoading = false;\n      },\n      error: error => {\n        console.error('Error loading dashboard data:', error);\n        this.isLoading = false;\n      }\n    });\n  }\n  // Helper method to generate colors for charts\n  generateColors(count) {\n    const baseColors = ['#4A6BFF', '#34D399', '#F59E0B', '#EF4444', '#8B5CF6', '#EC4899', '#10B981', '#6366F1'];\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n      colors.push(baseColors[i % baseColors.length]);\n    }\n    return colors;\n  }\n  static {\n    this.ɵfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.LeadService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      decls: 8,\n      vars: 2,\n      consts: [[1, \"dashboard-container\"], [1, \"container\"], [1, \"dashboard-title\"], [1, \"dashboard-subtitle\"], [\"class\", \"loading-indicator\", 4, \"ngIf\"], [\"class\", \"dashboard-content\", 4, \"ngIf\"], [1, \"loading-indicator\"], [1, \"spinner\"], [1, \"dashboard-content\"], [1, \"stats-grid\"], [1, \"stat-card\"], [1, \"stat-icon\"], [1, \"material-icons\"], [1, \"stat-content\"], [1, \"stat-value\"], [1, \"stat-icon\", \"qualified\"], [1, \"stat-icon\", \"score\"], [1, \"stat-unit\"], [1, \"charts-section\"], [1, \"row\"], [1, \"col-12\", \"col-md-6\"], [1, \"chart-card\"], [1, \"chart-title\"], [1, \"chart-placeholder\"], [1, \"placeholder-chart\", \"pie-chart\"], [\"class\", \"placeholder-segment\", 3, \"background-color\", \"width\", 4, \"ngFor\", \"ngForOf\"], [1, \"chart-legend\"], [\"class\", \"legend-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"placeholder-chart\", \"bar-chart\"], [\"class\", \"placeholder-bar\", 3, \"backgroundColor\", \"height\", 4, \"ngFor\", \"ngForOf\"], [1, \"actions-section\"], [1, \"card\"], [1, \"section-title\"], [1, \"action-buttons\"], [\"routerLink\", \"/add-lead\", 1, \"btn\", \"btn-primary\"], [\"routerLink\", \"/leads\", 1, \"btn\", \"btn-outline\"], [1, \"btn\", \"btn-outline\", 3, \"click\"], [1, \"placeholder-segment\"], [1, \"legend-item\"], [1, \"legend-color\"], [1, \"legend-label\"], [1, \"placeholder-bar\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n          i0.ɵɵtext(3, \"Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"p\", 3);\n          i0.ɵɵtext(5, \"Overview of your lead generation performance\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(6, DashboardComponent_div_6_Template, 4, 0, \"div\", 4);\n          i0.ɵɵtemplate(7, DashboardComponent_div_7_Template, 68, 7, \"div\", 5);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink],\n      styles: [\".dashboard-container[_ngcontent-%COMP%] {\\n  padding: 2rem 0;\\n}\\n\\n.dashboard-title[_ngcontent-%COMP%] {\\n  font-size: 1.75rem;\\n  font-weight: 700;\\n  margin-bottom: 0.5rem;\\n  color: var(--text-color);\\n}\\n\\n.dashboard-subtitle[_ngcontent-%COMP%] {\\n  color: var(--light-text);\\n  margin-bottom: 2rem;\\n}\\n\\n.loading-indicator[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 3rem 0;\\n}\\n.loading-indicator[_ngcontent-%COMP%]   .spinner[_ngcontent-%COMP%] {\\n  width: 40px;\\n  height: 40px;\\n  border: 4px solid rgba(74, 107, 255, 0.2);\\n  border-radius: 50%;\\n  border-top-color: var(--primary-color);\\n  animation: _ngcontent-%COMP%_spin 1s ease-in-out infinite;\\n  margin-bottom: 1rem;\\n}\\n.loading-indicator[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  color: var(--light-text);\\n  font-size: 1.1rem;\\n}\\n\\n@keyframes _ngcontent-%COMP%_spin {\\n  to {\\n    transform: rotate(360deg);\\n  }\\n}\\n.stats-grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(1, 1fr);\\n  gap: 1.5rem;\\n  margin-bottom: 2rem;\\n}\\n@media (min-width: 576px) {\\n  .stats-grid[_ngcontent-%COMP%] {\\n    grid-template-columns: repeat(2, 1fr);\\n  }\\n}\\n@media (min-width: 992px) {\\n  .stats-grid[_ngcontent-%COMP%] {\\n    grid-template-columns: repeat(3, 1fr);\\n  }\\n}\\n\\n.stat-card[_ngcontent-%COMP%] {\\n  background-color: var(--background-color);\\n  border-radius: 8px;\\n  box-shadow: var(--box-shadow);\\n  padding: 1.5rem;\\n  display: flex;\\n  align-items: center;\\n}\\n.stat-card[_ngcontent-%COMP%]   .stat-icon[_ngcontent-%COMP%] {\\n  width: 50px;\\n  height: 50px;\\n  border-radius: 8px;\\n  background-color: var(--primary-light);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  margin-right: 1rem;\\n}\\n.stat-card[_ngcontent-%COMP%]   .stat-icon[_ngcontent-%COMP%]   .material-icons[_ngcontent-%COMP%] {\\n  font-size: 1.75rem;\\n  color: var(--primary-color);\\n}\\n.stat-card[_ngcontent-%COMP%]   .stat-icon.qualified[_ngcontent-%COMP%] {\\n  background-color: rgba(52, 211, 153, 0.2);\\n}\\n.stat-card[_ngcontent-%COMP%]   .stat-icon.qualified[_ngcontent-%COMP%]   .material-icons[_ngcontent-%COMP%] {\\n  color: var(--success-color);\\n}\\n.stat-card[_ngcontent-%COMP%]   .stat-icon.score[_ngcontent-%COMP%] {\\n  background-color: rgba(245, 158, 11, 0.2);\\n}\\n.stat-card[_ngcontent-%COMP%]   .stat-icon.score[_ngcontent-%COMP%]   .material-icons[_ngcontent-%COMP%] {\\n  color: var(--warning-color);\\n}\\n.stat-card[_ngcontent-%COMP%]   .stat-content[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  font-size: 0.875rem;\\n  font-weight: 500;\\n  color: var(--light-text);\\n  margin: 0 0 0.25rem;\\n}\\n.stat-card[_ngcontent-%COMP%]   .stat-content[_ngcontent-%COMP%]   .stat-value[_ngcontent-%COMP%] {\\n  font-size: 1.75rem;\\n  font-weight: 700;\\n  color: var(--text-color);\\n  margin: 0;\\n}\\n.stat-card[_ngcontent-%COMP%]   .stat-content[_ngcontent-%COMP%]   .stat-value[_ngcontent-%COMP%]   .stat-unit[_ngcontent-%COMP%] {\\n  font-size: 1rem;\\n  font-weight: 500;\\n  color: var(--light-text);\\n  margin-left: 0.25rem;\\n}\\n\\n.charts-section[_ngcontent-%COMP%] {\\n  margin-bottom: 2rem;\\n}\\n.charts-section[_ngcontent-%COMP%]   .chart-card[_ngcontent-%COMP%] {\\n  background-color: var(--background-color);\\n  border-radius: 8px;\\n  box-shadow: var(--box-shadow);\\n  padding: 1.5rem;\\n  margin-bottom: 1.5rem;\\n}\\n.charts-section[_ngcontent-%COMP%]   .chart-card[_ngcontent-%COMP%]   .chart-title[_ngcontent-%COMP%] {\\n  font-size: 1.1rem;\\n  font-weight: 600;\\n  margin-bottom: 1.5rem;\\n  color: var(--text-color);\\n}\\n\\n.chart-placeholder[_ngcontent-%COMP%] {\\n  height: 250px;\\n  display: flex;\\n  flex-direction: column;\\n}\\n.chart-placeholder[_ngcontent-%COMP%]   .placeholder-chart[_ngcontent-%COMP%] {\\n  flex: 1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  margin-bottom: 1rem;\\n}\\n.chart-placeholder[_ngcontent-%COMP%]   .placeholder-chart.pie-chart[_ngcontent-%COMP%] {\\n  width: 180px;\\n  height: 180px;\\n  margin: 0 auto;\\n  border-radius: 5%;\\n  background-color: #f0f0f0;\\n  position: relative;\\n  overflow: hidden;\\n}\\n.chart-placeholder[_ngcontent-%COMP%]   .placeholder-chart.pie-chart[_ngcontent-%COMP%]   .placeholder-segment[_ngcontent-%COMP%] {\\n  position: absolute;\\n  transform-origin: left center;\\n  left: 50%;\\n  top: 0;\\n}\\n.chart-placeholder[_ngcontent-%COMP%]   .placeholder-chart.bar-chart[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 180px;\\n  display: flex;\\n  align-items: flex-end;\\n  justify-content: space-around;\\n}\\n.chart-placeholder[_ngcontent-%COMP%]   .placeholder-chart.bar-chart[_ngcontent-%COMP%]   .placeholder-bar[_ngcontent-%COMP%] {\\n  width: 30px;\\n  border-radius: 4px 4px 0 0;\\n}\\n.chart-placeholder[_ngcontent-%COMP%]   .chart-legend[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-wrap: wrap;\\n  gap: 1rem;\\n  justify-content: center;\\n}\\n.chart-placeholder[_ngcontent-%COMP%]   .chart-legend[_ngcontent-%COMP%]   .legend-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n}\\n.chart-placeholder[_ngcontent-%COMP%]   .chart-legend[_ngcontent-%COMP%]   .legend-item[_ngcontent-%COMP%]   .legend-color[_ngcontent-%COMP%] {\\n  width: 12px;\\n  height: 12px;\\n  border-radius: 2px;\\n  margin-right: 0.5rem;\\n}\\n.chart-placeholder[_ngcontent-%COMP%]   .chart-legend[_ngcontent-%COMP%]   .legend-item[_ngcontent-%COMP%]   .legend-label[_ngcontent-%COMP%] {\\n  font-size: 0.875rem;\\n  color: var(--light-text);\\n}\\n\\n.actions-section[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%] {\\n  padding: 1.5rem;\\n}\\n.actions-section[_ngcontent-%COMP%]   .section-title[_ngcontent-%COMP%] {\\n  font-size: 1.1rem;\\n  font-weight: 600;\\n  margin-bottom: 1.5rem;\\n  color: var(--text-color);\\n}\\n.actions-section[_ngcontent-%COMP%]   .action-buttons[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-wrap: wrap;\\n  gap: 1rem;\\n}\\n.actions-section[_ngcontent-%COMP%]   .action-buttons[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n}\\n.actions-section[_ngcontent-%COMP%]   .action-buttons[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]   .material-icons[_ngcontent-%COMP%] {\\n  margin-right: 0.5rem;\\n  font-size: 1.25rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵstyleProp","ctx_r2","qualificationData","datasets","backgroundColor","i_r7","value_r6","leadCount","ɵɵadvance","ctx_r3","i_r9","ɵɵtextInterpolate2","label_r8","data","ctx_r4","industryData","i_r11","value_r10","length","Math","max","apply","ctx_r5","i_r13","label_r12","ɵɵtemplate","DashboardComponent_div_7_div_39_Template","DashboardComponent_div_7_div_41_Template","DashboardComponent_div_7_div_48_Template","DashboardComponent_div_7_div_50_Template","ɵɵlistener","DashboardComponent_div_7_Template_button_click_64_listener","ɵɵrestoreView","_r15","ctx_r14","ɵɵnextContext","ɵɵresetView","loadDashboardData","ɵɵtextInterpolate","ctx_r1","qualifiedLeadCount","averageScore","ɵɵproperty","labels","DashboardComponent","constructor","leadService","isLoading","ngOnInit","getAllLeads","subscribe","next","response","success","leads","qualifiedLeads","filter","lead","scoreStr","qualificationScore","undefined","String","score","parseInt","totalScore","reduce","sum","round","highScoreLeads","mediumScoreLeads","lowScoreLeads","industries","forEach","industry","industryLabels","Object","keys","industryValues","values","industryColors","generateColors","error","console","count","baseColors","colors","i","push","ɵɵdirectiveInject","i1","LeadService","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","DashboardComponent_div_6_Template","DashboardComponent_div_7_Template"],"sources":["C:\\Users\\ccame\\CascadeProjects\\lead-generator\\frontend\\src\\app\\components\\dashboard\\dashboard.component.ts","C:\\Users\\ccame\\CascadeProjects\\lead-generator\\frontend\\src\\app\\components\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { LeadService } from '../../services/lead.service';\nimport { Lead } from '../../models/lead.model';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  leadCount = 0;\n  qualifiedLeadCount = 0;\n  averageScore = 0;\n  isLoading = true;\n  \n  // Make Math available to the template\n  Math = Math;\n  \n  // Placeholder data for charts\n  qualificationData = {\n    labels: ['High (80-100)', 'Medium (60-79)', 'Low (0-59)'],\n    datasets: [\n      {\n        data: [0, 0, 0],\n        backgroundColor: ['#34D399', '#4A6BFF', '#F59E0B']\n      }\n    ]\n  };\n  \n  industryData: {\n    labels: string[];\n    datasets: Array<{\n      data: number[];\n      backgroundColor: string[];\n    }>;\n  } = {\n    labels: [],\n    datasets: [\n      {\n        data: [],\n        backgroundColor: []\n      }\n    ]\n  };\n\n  constructor(private leadService: LeadService) { }\n\n  ngOnInit(): void {\n    this.loadDashboardData();\n  }\n  \n  loadDashboardData(): void {\n    this.isLoading = true;\n    \n    this.leadService.getAllLeads().subscribe({\n      next: (response) => {\n        if (response.success && response.data) {\n          const leads = response.data as Lead[];\n          this.leadCount = leads.length;\n          \n          // Calculate qualified leads (score >= 70)\n          const qualifiedLeads = leads.filter((lead: Lead) => {\n            const scoreStr = lead.qualificationScore !== undefined ? String(lead.qualificationScore) : '0';\n            const score = parseInt(scoreStr, 10);\n            return score >= 70;\n          });\n          this.qualifiedLeadCount = qualifiedLeads.length;\n          \n          // Calculate average score\n          if (leads.length > 0) {\n            const totalScore = leads.reduce((sum: number, lead: Lead) => {\n              const scoreStr = lead.qualificationScore !== undefined ? String(lead.qualificationScore) : '0';\n              const score = parseInt(scoreStr, 10);\n              return sum + score;\n            }, 0);\n            this.averageScore = Math.round(totalScore / leads.length);\n          }\n          \n          // Process qualification score distribution\n          const highScoreLeads = leads.filter((lead: Lead) => {\n            const scoreStr = lead.qualificationScore !== undefined ? String(lead.qualificationScore) : '0';\n            const score = parseInt(scoreStr, 10);\n            return score >= 80;\n          }).length;\n          \n          const mediumScoreLeads = leads.filter((lead: Lead) => {\n            const scoreStr = lead.qualificationScore !== undefined ? String(lead.qualificationScore) : '0';\n            const score = parseInt(scoreStr, 10);\n            return score >= 60 && score < 80;\n          }).length;\n          \n          const lowScoreLeads = leads.filter((lead: Lead) => {\n            const scoreStr = lead.qualificationScore !== undefined ? String(lead.qualificationScore) : '0';\n            const score = parseInt(scoreStr, 10);\n            return score < 60;\n          }).length;\n          \n          this.qualificationData.datasets[0].data = [highScoreLeads, mediumScoreLeads, lowScoreLeads];\n          \n          // Process industry distribution\n          const industries: Record<string, number> = {};\n          leads.forEach((lead: Lead) => {\n            const industry = lead.industry || 'Unknown';\n            industries[industry] = (industries[industry] || 0) + 1;\n          });\n          \n          const industryLabels = Object.keys(industries);\n          const industryValues = Object.values(industries);\n          const industryColors = this.generateColors(industryLabels.length);\n          \n          this.industryData.labels = industryLabels;\n          this.industryData.datasets[0].data = industryValues;\n          this.industryData.datasets[0].backgroundColor = industryColors;\n        }\n        \n        this.isLoading = false;\n      },\n      error: (error) => {\n        console.error('Error loading dashboard data:', error);\n        this.isLoading = false;\n      }\n    });\n  }\n  \n  // Helper method to generate colors for charts\n  generateColors(count: number): string[] {\n    const baseColors = ['#4A6BFF', '#34D399', '#F59E0B', '#EF4444', '#8B5CF6', '#EC4899', '#10B981', '#6366F1'];\n    const colors = [];\n    \n    for (let i = 0; i < count; i++) {\n      colors.push(baseColors[i % baseColors.length]);\n    }\n    \n    return colors;\n  }\n}\n","<div class=\"dashboard-container\">\n  <div class=\"container\">\n    <h1 class=\"dashboard-title\">Dashboard</h1>\n    <p class=\"dashboard-subtitle\">Overview of your lead generation performance</p>\n    \n    <div *ngIf=\"isLoading\" class=\"loading-indicator\">\n      <div class=\"spinner\"></div>\n      <p>Loading dashboard data...</p>\n    </div>\n    \n    <div *ngIf=\"!isLoading\" class=\"dashboard-content\">\n      <!-- Stats Cards -->\n      <div class=\"stats-grid\">\n        <div class=\"stat-card\">\n          <div class=\"stat-icon\">\n            <span class=\"material-icons\">people</span>\n          </div>\n          <div class=\"stat-content\">\n            <h3>Total Leads</h3>\n            <p class=\"stat-value\">{{ leadCount }}</p>\n          </div>\n        </div>\n        \n        <div class=\"stat-card\">\n          <div class=\"stat-icon qualified\">\n            <span class=\"material-icons\">verified</span>\n          </div>\n          <div class=\"stat-content\">\n            <h3>Qualified Leads</h3>\n            <p class=\"stat-value\">{{ qualifiedLeadCount }}</p>\n          </div>\n        </div>\n        \n        <div class=\"stat-card\">\n          <div class=\"stat-icon score\">\n            <span class=\"material-icons\">analytics</span>\n          </div>\n          <div class=\"stat-content\">\n            <h3>Average Score</h3>\n            <p class=\"stat-value\">{{ averageScore }}<span class=\"stat-unit\">/100</span></p>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Charts Section -->\n      <div class=\"charts-section\">\n        <div class=\"row\">\n          <div class=\"col-12 col-md-6\">\n            <div class=\"chart-card\">\n              <h3 class=\"chart-title\">Lead Qualification Distribution</h3>\n              <div class=\"chart-placeholder\">\n                <!-- Chart.js would be rendered here -->\n                <div class=\"placeholder-chart pie-chart\">\n                  <div *ngFor=\"let value of qualificationData.datasets[0].data; let i = index\" \n                       class=\"placeholder-segment\" \n                       [style.background-color]=\"qualificationData.datasets[0].backgroundColor[i]\"\n                       [style.width.%]=\"value > 0 ? (value / leadCount) * 100 : 0\">\n                  </div>\n                </div>\n                <div class=\"chart-legend\">\n                  <div *ngFor=\"let label of qualificationData.labels; let i = index\" class=\"legend-item\">\n                    <span class=\"legend-color\" [style.background-color]=\"qualificationData.datasets[0].backgroundColor[i]\"></span>\n                    <span class=\"legend-label\">{{ label }}: {{ qualificationData.datasets[0].data[i] }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"col-12 col-md-6\">\n            <div class=\"chart-card\">\n              <h3 class=\"chart-title\">Leads by Industry</h3>\n              <div class=\"chart-placeholder\">\n                <!-- Chart.js would be rendered here -->\n                <div class=\"placeholder-chart bar-chart\">\n                  <div *ngFor=\"let value of industryData.datasets[0].data; let i = index\" \n                       class=\"placeholder-bar\" \n                       [style.backgroundColor]=\"industryData.datasets[0].backgroundColor[i]\"\n                       [style.height.%]=\"value > 0 && industryData.datasets[0].data.length > 0 ? (value / Math.max.apply(null, industryData.datasets[0].data)) * 80 : 0\">\n                  </div>\n                </div>\n                <div class=\"chart-legend\">\n                  <div *ngFor=\"let label of industryData.labels; let i = index\" class=\"legend-item\">\n                    <span class=\"legend-color\" [style.background-color]=\"industryData.datasets[0].backgroundColor[i]\"></span>\n                    <span class=\"legend-label\">{{ label }}: {{ industryData.datasets[0].data[i] }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Actions Section -->\n      <div class=\"actions-section\">\n        <div class=\"card\">\n          <h3 class=\"section-title\">Quick Actions</h3>\n          <div class=\"action-buttons\">\n            <a routerLink=\"/add-lead\" class=\"btn btn-primary\">\n              <span class=\"material-icons\">add</span>\n              Add New Lead\n            </a>\n            <a routerLink=\"/leads\" class=\"btn btn-outline\">\n              <span class=\"material-icons\">list</span>\n              View All Leads\n            </a>\n            <button class=\"btn btn-outline\" (click)=\"loadDashboardData()\">\n              <span class=\"material-icons\">refresh</span>\n              Refresh Data\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"],"mappings":";;;;;;ICKIA,EAAA,CAAAC,cAAA,aAAiD;IAC/CD,EAAA,CAAAE,SAAA,aAA2B;IAC3BF,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAG,MAAA,gCAAyB;IAAAH,EAAA,CAAAI,YAAA,EAAI;;;;;IA8CpBJ,EAAA,CAAAE,SAAA,cAIM;;;;;;IAFDF,EAAA,CAAAK,WAAA,qBAAAC,MAAA,CAAAC,iBAAA,CAAAC,QAAA,IAAAC,eAAA,CAAAC,IAAA,EAA2E,UAAAC,QAAA,OAAAA,QAAA,GAAAL,MAAA,CAAAM,SAAA;;;;;IAKhFZ,EAAA,CAAAC,cAAA,cAAuF;IACrFD,EAAA,CAAAE,SAAA,eAA8G;IAC9GF,EAAA,CAAAC,cAAA,eAA2B;IAAAD,EAAA,CAAAG,MAAA,GAAwD;IAAAH,EAAA,CAAAI,YAAA,EAAO;;;;;;IAD/DJ,EAAA,CAAAa,SAAA,GAA2E;IAA3Eb,EAAA,CAAAK,WAAA,qBAAAS,MAAA,CAAAP,iBAAA,CAAAC,QAAA,IAAAC,eAAA,CAAAM,IAAA,EAA2E;IAC3Ef,EAAA,CAAAa,SAAA,GAAwD;IAAxDb,EAAA,CAAAgB,kBAAA,KAAAC,QAAA,QAAAH,MAAA,CAAAP,iBAAA,CAAAC,QAAA,IAAAU,IAAA,CAAAH,IAAA,MAAwD;;;;;IAarFf,EAAA,CAAAE,SAAA,cAIM;;;;;;IAFDF,EAAA,CAAAK,WAAA,qBAAAc,MAAA,CAAAC,YAAA,CAAAZ,QAAA,IAAAC,eAAA,CAAAY,KAAA,EAAqE,WAAAC,SAAA,QAAAH,MAAA,CAAAC,YAAA,CAAAZ,QAAA,IAAAU,IAAA,CAAAK,MAAA,OAAAD,SAAA,GAAAH,MAAA,CAAAK,IAAA,CAAAC,GAAA,CAAAC,KAAA,OAAAP,MAAA,CAAAC,YAAA,CAAAZ,QAAA,IAAAU,IAAA;;;;;IAK1ElB,EAAA,CAAAC,cAAA,cAAkF;IAChFD,EAAA,CAAAE,SAAA,eAAyG;IACzGF,EAAA,CAAAC,cAAA,eAA2B;IAAAD,EAAA,CAAAG,MAAA,GAAmD;IAAAH,EAAA,CAAAI,YAAA,EAAO;;;;;;IAD1DJ,EAAA,CAAAa,SAAA,GAAsE;IAAtEb,EAAA,CAAAK,WAAA,qBAAAsB,MAAA,CAAAP,YAAA,CAAAZ,QAAA,IAAAC,eAAA,CAAAmB,KAAA,EAAsE;IACtE5B,EAAA,CAAAa,SAAA,GAAmD;IAAnDb,EAAA,CAAAgB,kBAAA,KAAAa,SAAA,QAAAF,MAAA,CAAAP,YAAA,CAAAZ,QAAA,IAAAU,IAAA,CAAAU,KAAA,MAAmD;;;;;;IA1E9F5B,EAAA,CAAAC,cAAA,aAAkD;IAKbD,EAAA,CAAAG,MAAA,aAAM;IAAAH,EAAA,CAAAI,YAAA,EAAO;IAE5CJ,EAAA,CAAAC,cAAA,cAA0B;IACpBD,EAAA,CAAAG,MAAA,kBAAW;IAAAH,EAAA,CAAAI,YAAA,EAAK;IACpBJ,EAAA,CAAAC,cAAA,YAAsB;IAAAD,EAAA,CAAAG,MAAA,IAAe;IAAAH,EAAA,CAAAI,YAAA,EAAI;IAI7CJ,EAAA,CAAAC,cAAA,eAAuB;IAEUD,EAAA,CAAAG,MAAA,gBAAQ;IAAAH,EAAA,CAAAI,YAAA,EAAO;IAE9CJ,EAAA,CAAAC,cAAA,eAA0B;IACpBD,EAAA,CAAAG,MAAA,uBAAe;IAAAH,EAAA,CAAAI,YAAA,EAAK;IACxBJ,EAAA,CAAAC,cAAA,aAAsB;IAAAD,EAAA,CAAAG,MAAA,IAAwB;IAAAH,EAAA,CAAAI,YAAA,EAAI;IAItDJ,EAAA,CAAAC,cAAA,eAAuB;IAEUD,EAAA,CAAAG,MAAA,iBAAS;IAAAH,EAAA,CAAAI,YAAA,EAAO;IAE/CJ,EAAA,CAAAC,cAAA,eAA0B;IACpBD,EAAA,CAAAG,MAAA,qBAAa;IAAAH,EAAA,CAAAI,YAAA,EAAK;IACtBJ,EAAA,CAAAC,cAAA,aAAsB;IAAAD,EAAA,CAAAG,MAAA,IAAkB;IAAAH,EAAA,CAAAC,cAAA,gBAAwB;IAAAD,EAAA,CAAAG,MAAA,YAAI;IAAAH,EAAA,CAAAI,YAAA,EAAO;IAMjFJ,EAAA,CAAAC,cAAA,eAA4B;IAIID,EAAA,CAAAG,MAAA,uCAA+B;IAAAH,EAAA,CAAAI,YAAA,EAAK;IAC5DJ,EAAA,CAAAC,cAAA,eAA+B;IAG3BD,EAAA,CAAA8B,UAAA,KAAAC,wCAAA,kBAIM;IACR/B,EAAA,CAAAI,YAAA,EAAM;IACNJ,EAAA,CAAAC,cAAA,eAA0B;IACxBD,EAAA,CAAA8B,UAAA,KAAAE,wCAAA,kBAGM;IACRhC,EAAA,CAAAI,YAAA,EAAM;IAKZJ,EAAA,CAAAC,cAAA,eAA6B;IAEDD,EAAA,CAAAG,MAAA,yBAAiB;IAAAH,EAAA,CAAAI,YAAA,EAAK;IAC9CJ,EAAA,CAAAC,cAAA,eAA+B;IAG3BD,EAAA,CAAA8B,UAAA,KAAAG,wCAAA,kBAIM;IACRjC,EAAA,CAAAI,YAAA,EAAM;IACNJ,EAAA,CAAAC,cAAA,eAA0B;IACxBD,EAAA,CAAA8B,UAAA,KAAAI,wCAAA,kBAGM;IACRlC,EAAA,CAAAI,YAAA,EAAM;IAQhBJ,EAAA,CAAAC,cAAA,eAA6B;IAECD,EAAA,CAAAG,MAAA,qBAAa;IAAAH,EAAA,CAAAI,YAAA,EAAK;IAC5CJ,EAAA,CAAAC,cAAA,eAA4B;IAEKD,EAAA,CAAAG,MAAA,WAAG;IAAAH,EAAA,CAAAI,YAAA,EAAO;IACvCJ,EAAA,CAAAG,MAAA,sBACF;IAAAH,EAAA,CAAAI,YAAA,EAAI;IACJJ,EAAA,CAAAC,cAAA,aAA+C;IAChBD,EAAA,CAAAG,MAAA,YAAI;IAAAH,EAAA,CAAAI,YAAA,EAAO;IACxCJ,EAAA,CAAAG,MAAA,wBACF;IAAAH,EAAA,CAAAI,YAAA,EAAI;IACJJ,EAAA,CAAAC,cAAA,kBAA8D;IAA9BD,EAAA,CAAAmC,UAAA,mBAAAC,2DAAA;MAAApC,EAAA,CAAAqC,aAAA,CAAAC,IAAA;MAAA,MAAAC,OAAA,GAAAvC,EAAA,CAAAwC,aAAA;MAAA,OAASxC,EAAA,CAAAyC,WAAA,CAAAF,OAAA,CAAAG,iBAAA,EAAmB;IAAA,EAAC;IAC3D1C,EAAA,CAAAC,cAAA,gBAA6B;IAAAD,EAAA,CAAAG,MAAA,eAAO;IAAAH,EAAA,CAAAI,YAAA,EAAO;IAC3CJ,EAAA,CAAAG,MAAA,sBACF;IAAAH,EAAA,CAAAI,YAAA,EAAS;;;;IA1FaJ,EAAA,CAAAa,SAAA,IAAe;IAAfb,EAAA,CAAA2C,iBAAA,CAAAC,MAAA,CAAAhC,SAAA,CAAe;IAUfZ,EAAA,CAAAa,SAAA,GAAwB;IAAxBb,EAAA,CAAA2C,iBAAA,CAAAC,MAAA,CAAAC,kBAAA,CAAwB;IAUxB7C,EAAA,CAAAa,SAAA,GAAkB;IAAlBb,EAAA,CAAA2C,iBAAA,CAAAC,MAAA,CAAAE,YAAA,CAAkB;IAcX9C,EAAA,CAAAa,SAAA,IAAuC;IAAvCb,EAAA,CAAA+C,UAAA,YAAAH,MAAA,CAAArC,iBAAA,CAAAC,QAAA,IAAAU,IAAA,CAAuC;IAOvClB,EAAA,CAAAa,SAAA,GAA6B;IAA7Bb,EAAA,CAAA+C,UAAA,YAAAH,MAAA,CAAArC,iBAAA,CAAAyC,MAAA,CAA6B;IAe7BhD,EAAA,CAAAa,SAAA,GAAkC;IAAlCb,EAAA,CAAA+C,UAAA,YAAAH,MAAA,CAAAxB,YAAA,CAAAZ,QAAA,IAAAU,IAAA,CAAkC;IAOlClB,EAAA,CAAAa,SAAA,GAAwB;IAAxBb,EAAA,CAAA+C,UAAA,YAAAH,MAAA,CAAAxB,YAAA,CAAA4B,MAAA,CAAwB;;;ADzEjE,OAAM,MAAOC,kBAAkB;EAoC7BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAnC/B,KAAAvC,SAAS,GAAG,CAAC;IACb,KAAAiC,kBAAkB,GAAG,CAAC;IACtB,KAAAC,YAAY,GAAG,CAAC;IAChB,KAAAM,SAAS,GAAG,IAAI;IAEhB;IACA,KAAA5B,IAAI,GAAGA,IAAI;IAEX;IACA,KAAAjB,iBAAiB,GAAG;MAClByC,MAAM,EAAE,CAAC,eAAe,EAAE,gBAAgB,EAAE,YAAY,CAAC;MACzDxC,QAAQ,EAAE,CACR;QACEU,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACfT,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS;OAClD;KAEJ;IAED,KAAAW,YAAY,GAMR;MACF4B,MAAM,EAAE,EAAE;MACVxC,QAAQ,EAAE,CACR;QACEU,IAAI,EAAE,EAAE;QACRT,eAAe,EAAE;OAClB;KAEJ;EAE+C;EAEhD4C,QAAQA,CAAA;IACN,IAAI,CAACX,iBAAiB,EAAE;EAC1B;EAEAA,iBAAiBA,CAAA;IACf,IAAI,CAACU,SAAS,GAAG,IAAI;IAErB,IAAI,CAACD,WAAW,CAACG,WAAW,EAAE,CAACC,SAAS,CAAC;MACvCC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAIA,QAAQ,CAACC,OAAO,IAAID,QAAQ,CAACvC,IAAI,EAAE;UACrC,MAAMyC,KAAK,GAAGF,QAAQ,CAACvC,IAAc;UACrC,IAAI,CAACN,SAAS,GAAG+C,KAAK,CAACpC,MAAM;UAE7B;UACA,MAAMqC,cAAc,GAAGD,KAAK,CAACE,MAAM,CAAEC,IAAU,IAAI;YACjD,MAAMC,QAAQ,GAAGD,IAAI,CAACE,kBAAkB,KAAKC,SAAS,GAAGC,MAAM,CAACJ,IAAI,CAACE,kBAAkB,CAAC,GAAG,GAAG;YAC9F,MAAMG,KAAK,GAAGC,QAAQ,CAACL,QAAQ,EAAE,EAAE,CAAC;YACpC,OAAOI,KAAK,IAAI,EAAE;UACpB,CAAC,CAAC;UACF,IAAI,CAACtB,kBAAkB,GAAGe,cAAc,CAACrC,MAAM;UAE/C;UACA,IAAIoC,KAAK,CAACpC,MAAM,GAAG,CAAC,EAAE;YACpB,MAAM8C,UAAU,GAAGV,KAAK,CAACW,MAAM,CAAC,CAACC,GAAW,EAAET,IAAU,KAAI;cAC1D,MAAMC,QAAQ,GAAGD,IAAI,CAACE,kBAAkB,KAAKC,SAAS,GAAGC,MAAM,CAACJ,IAAI,CAACE,kBAAkB,CAAC,GAAG,GAAG;cAC9F,MAAMG,KAAK,GAAGC,QAAQ,CAACL,QAAQ,EAAE,EAAE,CAAC;cACpC,OAAOQ,GAAG,GAAGJ,KAAK;YACpB,CAAC,EAAE,CAAC,CAAC;YACL,IAAI,CAACrB,YAAY,GAAGtB,IAAI,CAACgD,KAAK,CAACH,UAAU,GAAGV,KAAK,CAACpC,MAAM,CAAC;;UAG3D;UACA,MAAMkD,cAAc,GAAGd,KAAK,CAACE,MAAM,CAAEC,IAAU,IAAI;YACjD,MAAMC,QAAQ,GAAGD,IAAI,CAACE,kBAAkB,KAAKC,SAAS,GAAGC,MAAM,CAACJ,IAAI,CAACE,kBAAkB,CAAC,GAAG,GAAG;YAC9F,MAAMG,KAAK,GAAGC,QAAQ,CAACL,QAAQ,EAAE,EAAE,CAAC;YACpC,OAAOI,KAAK,IAAI,EAAE;UACpB,CAAC,CAAC,CAAC5C,MAAM;UAET,MAAMmD,gBAAgB,GAAGf,KAAK,CAACE,MAAM,CAAEC,IAAU,IAAI;YACnD,MAAMC,QAAQ,GAAGD,IAAI,CAACE,kBAAkB,KAAKC,SAAS,GAAGC,MAAM,CAACJ,IAAI,CAACE,kBAAkB,CAAC,GAAG,GAAG;YAC9F,MAAMG,KAAK,GAAGC,QAAQ,CAACL,QAAQ,EAAE,EAAE,CAAC;YACpC,OAAOI,KAAK,IAAI,EAAE,IAAIA,KAAK,GAAG,EAAE;UAClC,CAAC,CAAC,CAAC5C,MAAM;UAET,MAAMoD,aAAa,GAAGhB,KAAK,CAACE,MAAM,CAAEC,IAAU,IAAI;YAChD,MAAMC,QAAQ,GAAGD,IAAI,CAACE,kBAAkB,KAAKC,SAAS,GAAGC,MAAM,CAACJ,IAAI,CAACE,kBAAkB,CAAC,GAAG,GAAG;YAC9F,MAAMG,KAAK,GAAGC,QAAQ,CAACL,QAAQ,EAAE,EAAE,CAAC;YACpC,OAAOI,KAAK,GAAG,EAAE;UACnB,CAAC,CAAC,CAAC5C,MAAM;UAET,IAAI,CAAChB,iBAAiB,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACU,IAAI,GAAG,CAACuD,cAAc,EAAEC,gBAAgB,EAAEC,aAAa,CAAC;UAE3F;UACA,MAAMC,UAAU,GAA2B,EAAE;UAC7CjB,KAAK,CAACkB,OAAO,CAAEf,IAAU,IAAI;YAC3B,MAAMgB,QAAQ,GAAGhB,IAAI,CAACgB,QAAQ,IAAI,SAAS;YAC3CF,UAAU,CAACE,QAAQ,CAAC,GAAG,CAACF,UAAU,CAACE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;UACxD,CAAC,CAAC;UAEF,MAAMC,cAAc,GAAGC,MAAM,CAACC,IAAI,CAACL,UAAU,CAAC;UAC9C,MAAMM,cAAc,GAAGF,MAAM,CAACG,MAAM,CAACP,UAAU,CAAC;UAChD,MAAMQ,cAAc,GAAG,IAAI,CAACC,cAAc,CAACN,cAAc,CAACxD,MAAM,CAAC;UAEjE,IAAI,CAACH,YAAY,CAAC4B,MAAM,GAAG+B,cAAc;UACzC,IAAI,CAAC3D,YAAY,CAACZ,QAAQ,CAAC,CAAC,CAAC,CAACU,IAAI,GAAGgE,cAAc;UACnD,IAAI,CAAC9D,YAAY,CAACZ,QAAQ,CAAC,CAAC,CAAC,CAACC,eAAe,GAAG2E,cAAc;;QAGhE,IAAI,CAAChC,SAAS,GAAG,KAAK;MACxB,CAAC;MACDkC,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrD,IAAI,CAAClC,SAAS,GAAG,KAAK;MACxB;KACD,CAAC;EACJ;EAEA;EACAiC,cAAcA,CAACG,KAAa;IAC1B,MAAMC,UAAU,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC3G,MAAMC,MAAM,GAAG,EAAE;IAEjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,EAAEG,CAAC,EAAE,EAAE;MAC9BD,MAAM,CAACE,IAAI,CAACH,UAAU,CAACE,CAAC,GAAGF,UAAU,CAAClE,MAAM,CAAC,CAAC;;IAGhD,OAAOmE,MAAM;EACf;;;uBA7HWzC,kBAAkB,EAAAjD,EAAA,CAAA6F,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAlB9C,kBAAkB;MAAA+C,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCT/BtG,EAAA,CAAAC,cAAA,aAAiC;UAEDD,EAAA,CAAAG,MAAA,gBAAS;UAAAH,EAAA,CAAAI,YAAA,EAAK;UAC1CJ,EAAA,CAAAC,cAAA,WAA8B;UAAAD,EAAA,CAAAG,MAAA,mDAA4C;UAAAH,EAAA,CAAAI,YAAA,EAAI;UAE9EJ,EAAA,CAAA8B,UAAA,IAAA0E,iCAAA,iBAGM;UAENxG,EAAA,CAAA8B,UAAA,IAAA2E,iCAAA,kBAuGM;UACRzG,EAAA,CAAAI,YAAA,EAAM;;;UA7GEJ,EAAA,CAAAa,SAAA,GAAe;UAAfb,EAAA,CAAA+C,UAAA,SAAAwD,GAAA,CAAAnD,SAAA,CAAe;UAKfpD,EAAA,CAAAa,SAAA,GAAgB;UAAhBb,EAAA,CAAA+C,UAAA,UAAAwD,GAAA,CAAAnD,SAAA,CAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}